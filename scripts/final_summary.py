#!/usr/bin/env python3
# Final integration and analysis summary

import os
from datetime import datetime


def main():
    print("=" * 80)
    print("NOROVIRUS SEQUENCE INTEGRATION & ANALYSIS PREPARATION - FINAL SUMMARY")
    print("=" * 80)
    print(f"Generated: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    print()

    print("üß¨ DATA INTEGRATION COMPLETED")
    print("-" * 40)
    print("‚úÖ Successfully fetched 44 norovirus sequences from PLoS ONE paper")
    print("   (DOI: 10.1371/journal.pone.0189504)")
    print("‚úÖ Combined with existing dataset: 44 + 44 = 88 total sequences")
    print("‚úÖ Enhanced genogroup diversity: 17 unique genogroups represented")
    print()

    print("üßπ ALIGNMENT CLEANING COMPLETED")
    print("-" * 40)
    print("‚úÖ Removed 2 problematic VP1-only sequences (MF681695.1, MF681696.1)")
    print("‚úÖ Trimmed 1,341 gappy columns (>95% gaps)")
    print("‚úÖ Reduced total sites by 72.8% (163,416 ‚Üí 44,376)")
    print("‚úÖ Final clean dataset: 86 sequences √ó 516 positions")
    print()

    print("‚öôÔ∏è  ANALYSIS PARAMETERS PREPARED")
    print("-" * 40)
    print("‚úÖ Three sliding window parameter sets created:")
    print(
        "   ‚Ä¢ Small windows:  75bp windows, 5bp steps  (~88 windows, high resolution)"
    )
    print("   ‚Ä¢ Medium windows: 125bp windows, 10bp steps (~40 windows, balanced)")
    print(
        "   ‚Ä¢ Large windows:  250bp windows, 20bp steps (~14 windows, broad patterns)"
    )
    print("‚úÖ All using backbone midpoint rooting and IQ-TREE2 with GTR+F+I+G4")
    print()

    print("üìÅ FILES CREATED")
    print("-" * 40)
    file_list = [
        "data/paper_sequences.fasta",
        "data/combined_norovirus_sequences.fasta",
        "data/enhanced_alignment_combined.fasta",
        "data/cleaned_alignment_combined.fasta",
        "data/genogroup_summary.txt",
        "scripts/fetch_paper_sequences.py",
        "scripts/integrate_sequences.py",
        "scripts/clean_alignment.py",
        "scripts/cleaning_summary.py",
        "params/params_cleaned_small_windows_75_5.json",
        "params/params_cleaned_medium_windows_125_10.json",
        "params/params_cleaned_large_windows_250_20.json",
        "run_multi_window_analysis.sh",
    ]

    for file in file_list:
        if os.path.exists(
            f"/Users/berksakalli/Projects/automated-window-sliding/{file}"
        ):
            print(f"   ‚úÖ {file}")
        else:
            print(f"   ‚ùå {file} (missing)")
    print()

    print("üöÄ READY TO RUN ANALYSIS")
    print("-" * 40)
    print("Execute the following command to run all three window size analyses:")
    print()
    print("   ./run_multi_window_analysis.sh")
    print()
    print("This will sequentially run:")
    print("1. Small windows (75bp) - High resolution analysis")
    print("2. Medium windows (125bp) - Balanced analysis")
    print("3. Large windows (250bp) - Broad pattern analysis")
    print()

    print("üìä EXPECTED OUTCOMES")
    print("-" * 40)
    print("‚Ä¢ Identification of recombination breakpoints at different resolutions")
    print("‚Ä¢ Assessment of phylogenetic signal across the norovirus genome")
    print("‚Ä¢ Comparison of topological changes between window sizes")
    print("‚Ä¢ Enhanced understanding of evolutionary patterns with broader sampling")
    print()

    print("üî¨ RESEARCH IMPACT")
    print("-" * 40)
    print("‚Ä¢ Integrated sequences provide broader phylogenetic context")
    print("‚Ä¢ Cleaned alignment removes biases from partial sequences")
    print("‚Ä¢ Multi-resolution analysis captures different evolutionary scales")
    print("‚Ä¢ Robust dataset ready for publication-quality phylogenetic analysis")
    print()

    print("=" * 80)


if __name__ == "__main__":
    main()
